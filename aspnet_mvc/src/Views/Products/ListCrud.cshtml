@model north.ViewModels.ProductsViewModel
@{
    ViewBag.Title = "List of Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section AdditionalCss {
    @Styles.Render("~/Content/Styles/ui.jqgrid.min.css")
}

@section AdditionalJavaScript {
    @Scripts.Render("~/bundles/jqgrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jqgrid-listcrud.js")

    <script type="text/javascript">
        var addEditTitle = "Products";
        var urlAndMethod = "/Products/Delete/";

        function addItem() {
            clearFields();
            resetValidationErrors();
            showHideItem(null);
            $("#productID").attr('disabled', true);
        }

        function editItem(productID, productName, supplierID, categoryID, quantityPerUnit, unitPrice, unitsInStock, unitsOnOrder, reorderLevel, discontinued) {
            clearFields();
            resetValidationErrors();
            showHideItem(productID);

            $("#productID").attr('disabled', false);
            $("#productID").val(productID);
            $("#productName").val(productName.replace(/~APOS/g, "'").replace(/~QUOT/g, '"').replace(/~NEWL/g, '\n'));
            $("#supplierID").val(supplierID);
            $("#categoryID").val(categoryID);
            $("#quantityPerUnit").val(quantityPerUnit.replace(/~APOS/g, "'").replace(/~QUOT/g, '"').replace(/~NEWL/g, '\n'));
            $("#unitPrice").val(unitPrice);
            $("#unitsInStock").val(unitsInStock);
            $("#unitsOnOrder").val(unitsOnOrder);
            $("#reorderLevel").val(reorderLevel);

            if (discontinued.toLowerCase() == "yes")
                $("#discontinued").attr('checked', 'checked');
            else
                $("#discontinued").removeAttr('checked');
 
            return false;
        }

        function clearFields() {
            $("#productID").val('');
            $("#productName").val('');
            $("#supplierID").val('');
            $("#categoryID").val('');
            $("#quantityPerUnit").val('');
            $("#unitPrice").val('');
            $("#unitsInStock").val('');
            $("#unitsOnOrder").val('');
            $("#reorderLevel").val('');
            $("#discontinued").removeAttr('checked');
        }

        $(function () {
            InitializeAddUpdateRecordDialog();
            $('.datetextbox').datepicker({ dateFormat: "m/d/yy" });

            $('#list-grid').jqGrid({
                url: 'http://localhost:27229/api/ProductsApi/SelectSkipTake/',
                datatype: 'json',
                mtype: 'GET',
                colNames: ['Product ID','Product Name','Supplier ID','Category ID','Quantity Per Unit','Unit Price','Units In Stock','Units On Order','Reorder Level','Discontinued', '', ''],
                colModel: [
                    { name: 'ProductID', index: 'ProductID', align: 'right' },
                    { name: 'ProductName', index: 'ProductName', align: 'left' },
                    { name: 'SupplierID', index: 'SupplierID', align: 'right' },
                    { name: 'CategoryID', index: 'CategoryID', align: 'right' },
                    { name: 'QuantityPerUnit', index: 'QuantityPerUnit', align: 'left' },
                    { name: 'UnitPrice', index: 'UnitPrice', align: 'right', formatter: 'currency', formatoptions: { decimalPlaces: 2, prefix: "$"} },
                    { name: 'UnitsInStock', index: 'UnitsInStock', align: 'right', formatter: 'integer' },
                    { name: 'UnitsOnOrder', index: 'UnitsOnOrder', align: 'right', formatter: 'integer' },
                    { name: 'ReorderLevel', index: 'ReorderLevel', align: 'right', formatter: 'integer' },
                    { name: 'Discontinued', index: 'Discontinued', align: 'center', formatter: 'checkbox' },
                    { name: 'editoperation', index: 'editoperation', align: 'center', width: 40, sortable: false },
                    { name: 'deleteoperation', index: 'deleteoperation', align: 'center', width: 40, sortable: false }
                ],
                pager: $('#list-pager'),
                rowNum: 10,
                rowList: [5, 10, 20, 50],
                sortname: 'ProductID',
                sortorder: "asc",
                viewrecords: true,
                caption: 'List of Products',
                height: '100%',
                width: '1200',
                gridComplete: function () {
                    var ids = jQuery("#list-grid").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var currentid = ids[i];
                        var productID = jQuery("#list-grid").jqGrid('getCell', ids[i], 'ProductID');
                        var productName = jQuery("#list-grid").jqGrid('getCell', ids[i], 'ProductName').replace(/'/g, '~APOS').replace(/"/g, '~QUOT').replace(/\n/g, '~NEWL');
                        var supplierID = jQuery("#list-grid").jqGrid('getCell', ids[i], 'SupplierID');
                        var categoryID = jQuery("#list-grid").jqGrid('getCell', ids[i], 'CategoryID');
                        var quantityPerUnit = jQuery("#list-grid").jqGrid('getCell', ids[i], 'QuantityPerUnit').replace(/'/g, '~APOS').replace(/"/g, '~QUOT').replace(/\n/g, '~NEWL');
                        var unitPrice = jQuery("#list-grid").jqGrid('getCell', ids[i], 'UnitPrice');
                        var unitsInStock = jQuery("#list-grid").jqGrid('getCell', ids[i], 'UnitsInStock');
                        var unitsOnOrder = jQuery("#list-grid").jqGrid('getCell', ids[i], 'UnitsOnOrder');
                        var reorderLevel = jQuery("#list-grid").jqGrid('getCell', ids[i], 'ReorderLevel');
                        var discontinued = jQuery("#list-grid").jqGrid('getCell', ids[i], 'Discontinued');

                        editLink = "<a href='#' onclick=\"editItem('" + productID + "','" + productName + "','" + supplierID + "','" + categoryID + "','" + quantityPerUnit + "','" + unitPrice + "','" + unitsInStock + "','" + unitsOnOrder + "','" + reorderLevel + "','" + discontinued + "')\"><img src='/Content/images/Edit.gif' style='border:none;' /></a>";
                        deleteLink = "<a href='#' onclick=\"deleteItem('" + currentid + "')\"><img src='/Content/Images/Delete.png' style='border:none;' /></a>";
                        jQuery("#list-grid").jqGrid('setRowData', ids[i], { editoperation: editLink });
                        jQuery("#list-grid").jqGrid('setRowData', ids[i], { deleteoperation: deleteLink });
                    }
                }
            });
        });
    </script> 
}

<h2>@ViewBag.Title</h2>
<br /><br />
<div id="addUpdateRecordDialog" title="Add New Products">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div>
        <fieldset>
            <legend></legend>
            <table>
                <tr id="trPrimaryKey">
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.ProductID):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.ProductID, new { @id = "productID", @readonly = "readonly" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.ProductID)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.ProductName):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.ProductName, new { @id = "productName" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.ProductName)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.SupplierID):</td>
                    <td></td>
                    <td class="editor-field">@Html.DropDownListFor(vm => vm.ProductsModel.SupplierID, new SelectList(Model.SuppliersDropDownListData, "SupplierID", "CompanyName"), "Select One", new { @id = "supplierID" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.SupplierID)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.CategoryID):</td>
                    <td></td>
                    <td class="editor-field">@Html.DropDownListFor(vm => vm.ProductsModel.CategoryID, new SelectList(Model.CategoriesDropDownListData, "CategoryID", "CategoryName"), "Select One", new { @id = "categoryID" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.CategoryID)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.QuantityPerUnit):</td>
                    <td></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.QuantityPerUnit, new { @id = "quantityPerUnit" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.QuantityPerUnit)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.UnitPrice):</td>
                    <td></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.UnitPrice, new { @id = "unitPrice" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.UnitPrice)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.UnitsInStock):</td>
                    <td></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.UnitsInStock, new { @id = "unitsInStock" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.UnitsInStock)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.UnitsOnOrder):</td>
                    <td></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.UnitsOnOrder, new { @id = "unitsOnOrder" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.UnitsOnOrder)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.ReorderLevel):</td>
                    <td></td>
                    <td class="editor-field">@Html.TextBoxFor(vm => vm.ProductsModel.ReorderLevel, new { @id = "reorderLevel" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.ReorderLevel)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.ProductsModel.Discontinued):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.CheckBoxFor(vm => vm.ProductsModel.Discontinued, new { @id = "discontinued" })</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.ProductsModel.Discontinued)</td>
                </tr>
                <tr>
                    <td colspan="2"></td>
                    <td colspan="2">
                        <br />
                        <input id="inputSubmit" name="inputSubmit" type="submit" value="Add" class="button-150" />
                        <input type="button" value="Cancel" onclick="closeDialog(); return false;" class="button-100" />
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
}
</div>

<div id="errorConfirmationDialog"></div>
<div id="errorDialog"></div>

<a href="#" onclick="addItem()"><img src="@Url.Content("~/Content/Images/Add.gif")" alt="Add New Products" style="border: none;" /></a>&nbsp;<a href="#" onclick="addItem()">Add New Products</a>
<br /><br />

<table id="list-grid"></table>
<div id="list-pager"></div>
