@using north.Domain;
@model north.ViewModels.OrderDetailsViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(function () {
        $('.datetextbox').datepicker({dateFormat: 'm/d/yy'});
    });
</script>

<h2>Unbound Record</h2>
<div>
@using (Html.BeginForm(@Model.ViewActionName, @Model.ViewControllerName, new { model = this.Model, returnUrl = @Model.ViewReturnUrl }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div>
        <fieldset>
            <legend></legend>
            <table>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.OrderDetailsModel.OrderID):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.DropDownListFor(vm => vm.OrderDetailsModel.OrderID, new SelectList("", ""), "Select One", new Dictionary<string, object> {{ "data-val", "true" }, { "data-val-required", "Order ID is required!" }})</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.OrderDetailsModel.OrderID)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.OrderDetailsModel.ProductID):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.DropDownListFor(vm => vm.OrderDetailsModel.ProductID, new SelectList("", ""), "Select One", new Dictionary<string, object> {{ "data-val", "true" }, { "data-val-required", "Product ID is required!" }})</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.OrderDetailsModel.ProductID)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.OrderDetailsModel.UnitPrice):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.EditorFor(vm => vm.OrderDetailsModel.UnitPrice)</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.OrderDetailsModel.UnitPrice)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.OrderDetailsModel.Quantity):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.EditorFor(vm => vm.OrderDetailsModel.Quantity)</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.OrderDetailsModel.Quantity)</td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(vm => vm.OrderDetailsModel.Discount):</td>
                    <td>&nbsp;<span style="color: red;">*</span></td>
                    <td class="editor-field">@Html.EditorFor(vm => vm.OrderDetailsModel.Discount)</td>
                    <td class="editor-field">@Html.ValidationMessageFor(vm => vm.OrderDetailsModel.Discount)</td>
                </tr>
                <tr>
                    <td colspan="2"></td>
                    <td colspan="2">
                        <br />
                        <input type="submit" value="Submit" class="button-150" />

                        @if (Request.UrlReferrer != null)
                        {
                            <input type="button" value="Cancel" onclick="window.location = '@Request.UrlReferrer.ToString()'; return false;" class="button-100" />
                        }
                        else
                        {
                            <input type="button" value="Cancel" onclick="window.location = '@Url.Action("Index", "Home")'; return false;" class="button-100" />
                        }
                    </td>
                </tr>
            </table>
        </fieldset>
    </div>
}
</div>
