using NHibernate.Mapping.ByCode;
using NHibernate.Mapping.ByCode.Conformist;
using NHibernateByCodeSample.Domain;


namespace NHibernateByCodeSample.Maps
{


    public class CustomersMap : ClassMapping<Customers>
    {

        public CustomersMap()
        {
            Table("customers");
            Lazy(true);
            Id(x => x.CustId, map => { map.Column("cust_id"); map.Generator(Generators.Identity); });
            Property(x => x.CustName, map => map.Column("cust_name"));
            Property(x => x.CustAddess, map => map.Column("cust_addess"));

            Bag(x => x.Orders, m =>
            {
                m.Key(k => k.Column("cust_id"));
                m.Cascade(Cascade.All | Cascade.DeleteOrphans);
                m.Inverse(true); //https://stackoverflow.com/a/713666
                m.Lazy(NHibernate.Mapping.ByCode.CollectionLazy.Extra);
            }, r => r.OneToMany());
        }

        /*
         * Lazy = By default, NHibernate loads *associations* lazily, meaning that #related entities# are not fetched from the database until accessed or requested.
         * Configuring lazy loading at the *entity level* affects the *entire* entity, and it's applied unless overridden by specific mappings within the entity.
         * 
         * CollectionLazy.Extra = It is particularly useful for large collections where you want to avoid fetching the entire collection from the database unless
         *   explicitly accessed. Hibernate employs a proxy-like mechanism for collections. Instead of loading the entire collection from the database when accessed, 
         *   it loads only the elements that are actually accessed or modified within the collection. This allows for more efficient handling of large collections 
         *   by minimizing the amount of data retrieved from the database.
        */

        /*
         * Generators.Identity: the primary key value is generated by the database during the insert operation. 
         * Generators.Assigned: the application is responsible for assigning a value to the primary key property of an entity. 
         * NHibernate does not generate or manage the value for the primary key column. You need to set the primary key value manually before saving the entity. 
        */

    }
}
